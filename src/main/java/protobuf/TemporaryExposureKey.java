// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: temporary_exposure_key_export.proto

package protobuf;

/**
 * Protobuf type {@code protobuf.TemporaryExposureKey}
 */
public  final class TemporaryExposureKey extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protobuf.TemporaryExposureKey)
    TemporaryExposureKeyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TemporaryExposureKey.newBuilder() to construct.
  private TemporaryExposureKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TemporaryExposureKey() {
    keyData_ = com.google.protobuf.ByteString.EMPTY;
    transmissionRiskLevel_ = 0;
    rollingStartIntervalNumber_ = 0;
    rollingPeriod_ = 144;
    reportType_ = 0;
    daysSinceOnsetOfSymptoms_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TemporaryExposureKey(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            bitField0_ |= 0x00000001;
            keyData_ = input.readBytes();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            transmissionRiskLevel_ = input.readInt32();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            rollingStartIntervalNumber_ = input.readInt32();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            rollingPeriod_ = input.readInt32();
            break;
          }
          case 40: {
            int rawValue = input.readEnum();
              @SuppressWarnings("deprecation")
            protobuf.TemporaryExposureKey.ReportType value = protobuf.TemporaryExposureKey.ReportType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(5, rawValue);
            } else {
              bitField0_ |= 0x00000010;
              reportType_ = rawValue;
            }
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            daysSinceOnsetOfSymptoms_ = input.readSInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return protobuf.TemporaryExposureKeyExportOuterClass.internal_static_protobuf_TemporaryExposureKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return protobuf.TemporaryExposureKeyExportOuterClass.internal_static_protobuf_TemporaryExposureKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            protobuf.TemporaryExposureKey.class, protobuf.TemporaryExposureKey.Builder.class);
  }

  /**
   * <pre>
   * Data type representing why this key was published.
   * </pre>
   *
   * Protobuf enum {@code protobuf.TemporaryExposureKey.ReportType}
   */
  public enum ReportType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Never returned by the client API.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>CONFIRMED_TEST = 1;</code>
     */
    CONFIRMED_TEST(1),
    /**
     * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
     */
    CONFIRMED_CLINICAL_DIAGNOSIS(2),
    /**
     * <code>SELF_REPORT = 3;</code>
     */
    SELF_REPORT(3),
    /**
     * <pre>
     * Reserved for future use.
     * </pre>
     *
     * <code>RECURSIVE = 4;</code>
     */
    RECURSIVE(4),
    /**
     * <pre>
     * Used to revoke a key, never returned by client API.
     * </pre>
     *
     * <code>REVOKED = 5;</code>
     */
    REVOKED(5),
    ;

    /**
     * <pre>
     * Never returned by the client API.
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>CONFIRMED_TEST = 1;</code>
     */
    public static final int CONFIRMED_TEST_VALUE = 1;
    /**
     * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
     */
    public static final int CONFIRMED_CLINICAL_DIAGNOSIS_VALUE = 2;
    /**
     * <code>SELF_REPORT = 3;</code>
     */
    public static final int SELF_REPORT_VALUE = 3;
    /**
     * <pre>
     * Reserved for future use.
     * </pre>
     *
     * <code>RECURSIVE = 4;</code>
     */
    public static final int RECURSIVE_VALUE = 4;
    /**
     * <pre>
     * Used to revoke a key, never returned by client API.
     * </pre>
     *
     * <code>REVOKED = 5;</code>
     */
    public static final int REVOKED_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReportType valueOf(int value) {
      return forNumber(value);
    }

    public static ReportType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return CONFIRMED_TEST;
        case 2: return CONFIRMED_CLINICAL_DIAGNOSIS;
        case 3: return SELF_REPORT;
        case 4: return RECURSIVE;
        case 5: return REVOKED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReportType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReportType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReportType>() {
            public ReportType findValueByNumber(int number) {
              return ReportType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protobuf.TemporaryExposureKey.getDescriptor().getEnumTypes().get(0);
    }

    private static final ReportType[] VALUES = values();

    public static ReportType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReportType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protobuf.TemporaryExposureKey.ReportType)
  }

  private int bitField0_;
  public static final int KEY_DATA_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString keyData_;
  /**
   * <pre>
   * Key of infected user
   * </pre>
   *
   * <code>optional bytes key_data = 1;</code>
   */
  public boolean hasKeyData() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Key of infected user
   * </pre>
   *
   * <code>optional bytes key_data = 1;</code>
   */
  public com.google.protobuf.ByteString getKeyData() {
    return keyData_;
  }

  public static final int TRANSMISSION_RISK_LEVEL_FIELD_NUMBER = 2;
  private int transmissionRiskLevel_;
  /**
   * <pre>
   * Varying risk associated with a key depending on diagnosis method
   * </pre>
   *
   * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
   */
  @java.lang.Deprecated public boolean hasTransmissionRiskLevel() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * Varying risk associated with a key depending on diagnosis method
   * </pre>
   *
   * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
   */
  @java.lang.Deprecated public int getTransmissionRiskLevel() {
    return transmissionRiskLevel_;
  }

  public static final int ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER = 3;
  private int rollingStartIntervalNumber_;
  /**
   * <pre>
   * The interval number since epoch for which a key starts
   * </pre>
   *
   * <code>optional int32 rolling_start_interval_number = 3;</code>
   */
  public boolean hasRollingStartIntervalNumber() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * The interval number since epoch for which a key starts
   * </pre>
   *
   * <code>optional int32 rolling_start_interval_number = 3;</code>
   */
  public int getRollingStartIntervalNumber() {
    return rollingStartIntervalNumber_;
  }

  public static final int ROLLING_PERIOD_FIELD_NUMBER = 4;
  private int rollingPeriod_;
  /**
   * <pre>
   * Increments of 10 minutes describing how long a key is valid
   * </pre>
   *
   * <code>optional int32 rolling_period = 4 [default = 144];</code>
   */
  public boolean hasRollingPeriod() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * Increments of 10 minutes describing how long a key is valid
   * </pre>
   *
   * <code>optional int32 rolling_period = 4 [default = 144];</code>
   */
  public int getRollingPeriod() {
    return rollingPeriod_;
  }

  public static final int REPORT_TYPE_FIELD_NUMBER = 5;
  private int reportType_;
  /**
   * <pre>
   * Type of diagnosis associated with a key.
   * </pre>
   *
   * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
   */
  public boolean hasReportType() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <pre>
   * Type of diagnosis associated with a key.
   * </pre>
   *
   * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
   */
  public protobuf.TemporaryExposureKey.ReportType getReportType() {
    @SuppressWarnings("deprecation")
    protobuf.TemporaryExposureKey.ReportType result = protobuf.TemporaryExposureKey.ReportType.valueOf(reportType_);
    return result == null ? protobuf.TemporaryExposureKey.ReportType.UNKNOWN : result;
  }

  public static final int DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER = 6;
  private int daysSinceOnsetOfSymptoms_;
  /**
   * <pre>
   * Number of days elapsed between symptom onset and the TEK being used.
   * E.g. 2 means TEK is 2 days after onset of symptoms.
   * </pre>
   *
   * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
   */
  public boolean hasDaysSinceOnsetOfSymptoms() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <pre>
   * Number of days elapsed between symptom onset and the TEK being used.
   * E.g. 2 means TEK is 2 days after onset of symptoms.
   * </pre>
   *
   * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
   */
  public int getDaysSinceOnsetOfSymptoms() {
    return daysSinceOnsetOfSymptoms_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBytes(1, keyData_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeInt32(2, transmissionRiskLevel_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeInt32(3, rollingStartIntervalNumber_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeInt32(4, rollingPeriod_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeEnum(5, reportType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeSInt32(6, daysSinceOnsetOfSymptoms_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, keyData_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, transmissionRiskLevel_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, rollingStartIntervalNumber_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, rollingPeriod_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(5, reportType_);
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(6, daysSinceOnsetOfSymptoms_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof protobuf.TemporaryExposureKey)) {
      return super.equals(obj);
    }
    protobuf.TemporaryExposureKey other = (protobuf.TemporaryExposureKey) obj;

    boolean result = true;
    result = result && (hasKeyData() == other.hasKeyData());
    if (hasKeyData()) {
      result = result && getKeyData()
          .equals(other.getKeyData());
    }
    result = result && (hasTransmissionRiskLevel() == other.hasTransmissionRiskLevel());
    if (hasTransmissionRiskLevel()) {
      result = result && (getTransmissionRiskLevel()
          == other.getTransmissionRiskLevel());
    }
    result = result && (hasRollingStartIntervalNumber() == other.hasRollingStartIntervalNumber());
    if (hasRollingStartIntervalNumber()) {
      result = result && (getRollingStartIntervalNumber()
          == other.getRollingStartIntervalNumber());
    }
    result = result && (hasRollingPeriod() == other.hasRollingPeriod());
    if (hasRollingPeriod()) {
      result = result && (getRollingPeriod()
          == other.getRollingPeriod());
    }
    result = result && (hasReportType() == other.hasReportType());
    if (hasReportType()) {
      result = result && reportType_ == other.reportType_;
    }
    result = result && (hasDaysSinceOnsetOfSymptoms() == other.hasDaysSinceOnsetOfSymptoms());
    if (hasDaysSinceOnsetOfSymptoms()) {
      result = result && (getDaysSinceOnsetOfSymptoms()
          == other.getDaysSinceOnsetOfSymptoms());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasKeyData()) {
      hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getKeyData().hashCode();
    }
    if (hasTransmissionRiskLevel()) {
      hash = (37 * hash) + TRANSMISSION_RISK_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getTransmissionRiskLevel();
    }
    if (hasRollingStartIntervalNumber()) {
      hash = (37 * hash) + ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getRollingStartIntervalNumber();
    }
    if (hasRollingPeriod()) {
      hash = (37 * hash) + ROLLING_PERIOD_FIELD_NUMBER;
      hash = (53 * hash) + getRollingPeriod();
    }
    if (hasReportType()) {
      hash = (37 * hash) + REPORT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + reportType_;
    }
    if (hasDaysSinceOnsetOfSymptoms()) {
      hash = (37 * hash) + DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER;
      hash = (53 * hash) + getDaysSinceOnsetOfSymptoms();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static protobuf.TemporaryExposureKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protobuf.TemporaryExposureKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static protobuf.TemporaryExposureKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static protobuf.TemporaryExposureKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static protobuf.TemporaryExposureKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static protobuf.TemporaryExposureKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(protobuf.TemporaryExposureKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code protobuf.TemporaryExposureKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protobuf.TemporaryExposureKey)
      protobuf.TemporaryExposureKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protobuf.TemporaryExposureKeyExportOuterClass.internal_static_protobuf_TemporaryExposureKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protobuf.TemporaryExposureKeyExportOuterClass.internal_static_protobuf_TemporaryExposureKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protobuf.TemporaryExposureKey.class, protobuf.TemporaryExposureKey.Builder.class);
    }

    // Construct using protobuf.TemporaryExposureKey.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      keyData_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      transmissionRiskLevel_ = 0;
      bitField0_ = (bitField0_ & ~0x00000002);
      rollingStartIntervalNumber_ = 0;
      bitField0_ = (bitField0_ & ~0x00000004);
      rollingPeriod_ = 144;
      bitField0_ = (bitField0_ & ~0x00000008);
      reportType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      daysSinceOnsetOfSymptoms_ = 0;
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return protobuf.TemporaryExposureKeyExportOuterClass.internal_static_protobuf_TemporaryExposureKey_descriptor;
    }

    @java.lang.Override
    public protobuf.TemporaryExposureKey getDefaultInstanceForType() {
      return protobuf.TemporaryExposureKey.getDefaultInstance();
    }

    @java.lang.Override
    public protobuf.TemporaryExposureKey build() {
      protobuf.TemporaryExposureKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public protobuf.TemporaryExposureKey buildPartial() {
      protobuf.TemporaryExposureKey result = new protobuf.TemporaryExposureKey(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.keyData_ = keyData_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.transmissionRiskLevel_ = transmissionRiskLevel_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.rollingStartIntervalNumber_ = rollingStartIntervalNumber_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.rollingPeriod_ = rollingPeriod_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.reportType_ = reportType_;
      if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
        to_bitField0_ |= 0x00000020;
      }
      result.daysSinceOnsetOfSymptoms_ = daysSinceOnsetOfSymptoms_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof protobuf.TemporaryExposureKey) {
        return mergeFrom((protobuf.TemporaryExposureKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(protobuf.TemporaryExposureKey other) {
      if (other == protobuf.TemporaryExposureKey.getDefaultInstance()) return this;
      if (other.hasKeyData()) {
        setKeyData(other.getKeyData());
      }
      if (other.hasTransmissionRiskLevel()) {
        setTransmissionRiskLevel(other.getTransmissionRiskLevel());
      }
      if (other.hasRollingStartIntervalNumber()) {
        setRollingStartIntervalNumber(other.getRollingStartIntervalNumber());
      }
      if (other.hasRollingPeriod()) {
        setRollingPeriod(other.getRollingPeriod());
      }
      if (other.hasReportType()) {
        setReportType(other.getReportType());
      }
      if (other.hasDaysSinceOnsetOfSymptoms()) {
        setDaysSinceOnsetOfSymptoms(other.getDaysSinceOnsetOfSymptoms());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      protobuf.TemporaryExposureKey parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (protobuf.TemporaryExposureKey) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public boolean hasKeyData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public Builder setKeyData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      keyData_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Key of infected user
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public Builder clearKeyData() {
      bitField0_ = (bitField0_ & ~0x00000001);
      keyData_ = getDefaultInstance().getKeyData();
      onChanged();
      return this;
    }

    private int transmissionRiskLevel_ ;
    /**
     * <pre>
     * Varying risk associated with a key depending on diagnosis method
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public boolean hasTransmissionRiskLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Varying risk associated with a key depending on diagnosis method
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public int getTransmissionRiskLevel() {
      return transmissionRiskLevel_;
    }
    /**
     * <pre>
     * Varying risk associated with a key depending on diagnosis method
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder setTransmissionRiskLevel(int value) {
      bitField0_ |= 0x00000002;
      transmissionRiskLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Varying risk associated with a key depending on diagnosis method
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2 [deprecated = true];</code>
     */
    @java.lang.Deprecated public Builder clearTransmissionRiskLevel() {
      bitField0_ = (bitField0_ & ~0x00000002);
      transmissionRiskLevel_ = 0;
      onChanged();
      return this;
    }

    private int rollingStartIntervalNumber_ ;
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public boolean hasRollingStartIntervalNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public int getRollingStartIntervalNumber() {
      return rollingStartIntervalNumber_;
    }
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public Builder setRollingStartIntervalNumber(int value) {
      bitField0_ |= 0x00000004;
      rollingStartIntervalNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The interval number since epoch for which a key starts
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public Builder clearRollingStartIntervalNumber() {
      bitField0_ = (bitField0_ & ~0x00000004);
      rollingStartIntervalNumber_ = 0;
      onChanged();
      return this;
    }

    private int rollingPeriod_ = 144;
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public boolean hasRollingPeriod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public int getRollingPeriod() {
      return rollingPeriod_;
    }
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public Builder setRollingPeriod(int value) {
      bitField0_ |= 0x00000008;
      rollingPeriod_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Increments of 10 minutes describing how long a key is valid
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public Builder clearRollingPeriod() {
      bitField0_ = (bitField0_ & ~0x00000008);
      rollingPeriod_ = 144;
      onChanged();
      return this;
    }

    private int reportType_ = 0;
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public boolean hasReportType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public protobuf.TemporaryExposureKey.ReportType getReportType() {
      @SuppressWarnings("deprecation")
      protobuf.TemporaryExposureKey.ReportType result = protobuf.TemporaryExposureKey.ReportType.valueOf(reportType_);
      return result == null ? protobuf.TemporaryExposureKey.ReportType.UNKNOWN : result;
    }
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public Builder setReportType(protobuf.TemporaryExposureKey.ReportType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000010;
      reportType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .protobuf.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public Builder clearReportType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      reportType_ = 0;
      onChanged();
      return this;
    }

    private int daysSinceOnsetOfSymptoms_ ;
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is 2 days after onset of symptoms.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public boolean hasDaysSinceOnsetOfSymptoms() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is 2 days after onset of symptoms.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public int getDaysSinceOnsetOfSymptoms() {
      return daysSinceOnsetOfSymptoms_;
    }
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is 2 days after onset of symptoms.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public Builder setDaysSinceOnsetOfSymptoms(int value) {
      bitField0_ |= 0x00000020;
      daysSinceOnsetOfSymptoms_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is 2 days after onset of symptoms.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public Builder clearDaysSinceOnsetOfSymptoms() {
      bitField0_ = (bitField0_ & ~0x00000020);
      daysSinceOnsetOfSymptoms_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:protobuf.TemporaryExposureKey)
  }

  // @@protoc_insertion_point(class_scope:protobuf.TemporaryExposureKey)
  private static final protobuf.TemporaryExposureKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new protobuf.TemporaryExposureKey();
  }

  public static protobuf.TemporaryExposureKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<TemporaryExposureKey>
      PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKey>() {
    @java.lang.Override
    public TemporaryExposureKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TemporaryExposureKey(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TemporaryExposureKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TemporaryExposureKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public protobuf.TemporaryExposureKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

